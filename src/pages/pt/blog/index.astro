---
// index.astro
import ArrowCard from "@components/ArrowCard.astro";
import Container from "@components/Container.astro";
import { BLOG } from "@consts";
import PageLayout from "@layouts/PageLayout.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import { getLangFromSlug, getLangFromUrl } from "../../../i18n/utils";

const url = Astro.url;
const lang = getLangFromUrl(url); // Detecta o idioma da URL

// Filtra os posts da coleção de acordo com o idioma
const posts = (await getCollection("blog"))
  .filter((post) => !post.data.draft && getLangFromSlug(post.slug) === lang)
  .reduce((acc: { [year: string]: CollectionEntry<"blog">[] }, post) => {
    const year = post.data.date.getFullYear().toString();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  }, {});

// Ordena os anos para exibição
const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-serif font-semibold text-black dark:text-white">
        Blog
      </div>
      <div class="space-y-4">
        {
          years.map((year) => (
            <section class="animate space-y-4">
              <div class="font-serif font-semibold text-black dark:text-white">
                {year}
              </div>
              <div>
                <ul class="flex flex-col gap-4">
                  {posts[year].map((post) => (
                    <li>
                      <ArrowCard entry={post} />
                    </li>
                  ))}
                </ul>
              </div>
            </section>
          ))
        }
      </div>
    </div>
  </Container>
</PageLayout>
