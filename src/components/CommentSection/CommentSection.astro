---
import { useEffect, useState } from "react";
import Comment from "./Comment.astro";
import CommentReply from "./CommentReply.astro";

const { attrs } = Astro.props;
const [commentsResult, setCommentsResult] = useState({
  data: [],
  pageCount: 0,
});
const [loadingComments, setLoadingComments] = useState(true);
const [message, setMessage] = useState("");
const [error, setError] = useState(null);
const [page, setPage] = useState(1);

useEffect(() => {
  async function getComments(p = 1) {
    setLoadingComments(true);
    try {
      const res = await fetch(
        `${attrs.host || "https://cusdis.com"}/api/open/comments?page=${p}&appId=${attrs.appId}&pageId=${attrs.pageId}`,
        {
          headers: {
            "x-timezone-offset": -new Date().getTimezoneOffset(),
          },
        },
      );
      const data = await res.json();
      setCommentsResult(data.data);
    } catch (e) {
      setError(e);
    } finally {
      setLoadingComments(false);
    }
  }

  getComments();
}, [page]);

function onClickPage(p) {
  setPage(p);
}

function setMessage(msg) {
  setMessage(msg);
}
---

{
  !error ? (
    <div class={theme === "dark" ? "dark" : ""}>
      {message && <div class="mb-4 bg-blue-500 p-2 text-white">{message}</div>}
      <CommentReply />
      <div class="my-8" />
      <div class="mt-4 px-1">
        {loadingComments ? (
          <div class="text-black dark:text-gray-100">{t("loading")}...</div>
        ) : (
          commentsResult.data.map((comment) => (
            <Comment comment={comment} firstFloor={true} />
          ))
        )}
        {commentsResult.pageCount > 1 && (
          <div>
            {Array.from({ length: commentsResult.pageCount }, (_, index) => (
              <button
                class={`mr-2 px-2 py-1 text-sm ${page === index + 1 ? "underline" : ""}`}
                onClick={() => onClickPage(index + 1)}
              >
                {index + 1}
              </button>
            ))}
          </div>
        )}
      </div>
      <div class="my-4" />
      <div class="text-center text-xs text-black/50 dark:text-gray-100">
        <a class="underline" href="https://cusdis.com">
          {t("powered_by")}
        </a>
      </div>
    </div>
  ) : null
}
