---
import Footer from "@components/Footer.astro";
import Head from "@components/Head.astro";
import Header from "@components/Header.astro";
import { SITE } from "@consts";

type Props = {
  title: string;
  description: string;
  enableComments?: boolean;
};

const { title, description, enableComments = false } = Astro.props;

import { getLangFromUrl } from "../i18n/utils.ts";

const url = Astro.url;
const id = Astro.url.pathname;
const lang = getLangFromUrl(url);

// --- Lógica para gerar a URL da Imagem Open Graph ---
// Função auxiliar para gerar a URL da imagem OG dinamicamente
const generateOgImageUrl = (pathname: string): string | null => {
  let cleanPath = pathname.startsWith("/") ? pathname.substring(1) : pathname;
  cleanPath = cleanPath.endsWith("/")
    ? cleanPath.substring(0, cleanPath.length - 1)
    : cleanPath;

  // Verifica se é uma página de blog válida (ex: /en/blog/post-slug ou /pt/blog/post-slug)
  const blogMatch = cleanPath.match(/^(en|pt)\/blog\/(.+)$/);

  if (blogMatch) {
    const postLang = blogMatch[1];
    const postSlug = blogMatch[2];
    // Constrói a URL relativa da imagem OG correspondente
    // A rota da API já lida com o prefixo de idioma
    return `/${postLang}/open-graph/${postSlug}.png`;
  }

  // Retorna uma imagem padrão se não for um post de blog reconhecido
  // Certifique-se que esta imagem existe em public/images/
  return "/images/deafult-og.png"; // Nome do arquivo padrão
};

// Gera a URL relativa ou usa a padrão
const ogImageUrl = generateOgImageUrl(Astro.url.pathname);
// Cria a URL absoluta usando Astro.site (configurado em astro.config.mjs)
const absoluteOgImageUrl = ogImageUrl
  ? new URL(ogImageUrl, Astro.site).href
  : null;
// --- Fim da Lógica OG Image ---
---

<!doctype html>
<html lang={lang}>
  <Head
    title={`${title} | ${SITE.NAME}`}
    description={description}
    ogImageUrl={absoluteOgImageUrl}
  />

  <body>
    <Header />
    <main>
      <slot />
    </main>
    <Footer
      enableComments={enableComments}
      pageTitle={title}
      pageUrl={url.toString()}
      pageId={id}
    />
  </body>
</html>
